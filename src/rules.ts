import { hexToBinary } from "./hex-code";

let rules = [
  // 0. expand triangles

  // 1. dots

  // 2. tides

  // 3. beach

  // 4. dots

  // 5. pattern

  // 6. collapse

  // 7. grids

  // 8. lines

  // 9. draw card

  // 10. dots left

  // 11. Sierpi≈Ñski
  "11111101111101111010011111001111111110011101111110111110111111110001111101111111011110011111011101101110111011100101111101101111110111111111000111011111111110110111111110111011110011111100111101101111111111101011101011110110011100000111011110101111101110111111101011111101011111110111111100111101111111111111111111010111110111111011111110111110010111110111010010011111111011111111111111011110101110111010111111111111110111111111011000111111110110110111111111111111110111111101111111111111111111000101111110110011",
  // 12. Dramatic lift and collapse
  hexToBinary(
    "effdfaffe5bffbfaedf7ff3fdefdba5dc7e33ef7f7f8cf1dbffff7d1e9fefcdf9f5ffbffddd2bfaffeefdf7efffefed77fbddbfffbecbeffbbf87e3dea6f3dfb"
  ),
  // 13. meteors falling

  // 14. area thrink

  // 15. strips drawing

  // 16. draw hairs

  // 17. drops
  "11111111111111111111111111111011111111101101011111111111111111111101111110110111111111111111111111101111010011111111011011111101111111101111110001111111101111101111111011100010110101110111110111101111101101110111111011110111011011101111111111111110111011111110111101111101100111111110110011101111001111111111111011110111011101111100101100101111101111011111011111110110111111110111111111100111110011100111101110101101110111111111011110101111111111111111011111111111110111111010011110101111111100110101100011111010",
  // 18. ferns

  // 19. triangles

  // 20.

  // 21. still triangles
  hexToBinary(
    "7dffff72ffdff7fbfeefffd7f5bfc37a7f5fef7f1dddfe7d6ff7bbb76ffff7f6bfffbef5c6f8ffe6fefddd91df9beffb5ffffeedfffbffe6b9dfaf7ff66fb5ff"
  ),
  // 22. some pattern
  hexToBinary(
    "2df76bdfa7ffe7bffdf7bf7fffffb7fbffb7affdffffdfa5f79f36afbfd777fff4b967ff2feadfffabf7ff7f7fefdf7abe77f7df3bdb7beffbcfffdff7b3fd7b"
  ),
  // 23. snaping
  hexToBinary(
    "76ff3bdfaff6ef3b3fffcc7bfe7cbfdf9dfebfbf6e25ff5efffb7679dfffb5dfffdffdbf3e7b7fffdfff6efeffbdbffeffefaffbfbfdffdffdd72fe7dbfeefff"
  ),
  // 24. emit triangles
  hexToBinary(
    "ff9e575bf7ffbbf77f3df9f5dff7f3fff7f97fed7db7ffb9aff7ec7fdcffe69fffff7ffd8dbf5fffb7e9fffbfedf6fde7ffb797ddfffbfbbf3ecff7be67bfbfb"
  ),
  // 25. drop
  hexToBinary(
    "ffbfffeefcdfff747ff75f3bbff9f0b9ffdfffffbfb76f76ffb57fd7dbbff2ffdff5fdff7efcddff6dadefbfddfb6fd7dff7ffef3befff5b6f5feffffbd7bbcf"
  ),
  // 26. still triangles
  hexToBinary(
    "b3bfbf75bffeff7deb76f3fa36bfb7fdff9dfbfbbffffdef7fff65feff77efffcef9ebdfffddfbf376ffbfcdfff5ffe7fff55bffd73f2ffebffdfebffbdbb9fd"
  ),
  // 27. move out
  hexToBinary(
    "fe5bffdffe1fdffbebfbffbbf74bcf6ddbd79ffffd7fe9ef716ffffef3dfebff6bfde7ffb7bffff7fd4fe3ba5fb7f3fbffafdeff7eeffe4dfafdf756ff7fad9f"
  ),
  // 28. grab
  hexToBinary(
    "ffd6ffdf57fdadffffffddfbfd77fbcedefffad7fd3ef9bcffffbcdf6fffffffff56cdf9ff7bfbdedfcb37bde3ff7f6f3df57fd76b7ee7b7ffbf7ffbef7e17bd"
  ),
  // 29. stabled
  hexToBinary(
    "b9f6ffff3becfddebfffdfedfb16dff9dbb77aebbfafefff7ff7ffdfffdfbfbfefcff277f7cfffbf77ff67ff1eeffcfdbff7fbbdff9ff7f5f76b6feafebeef7f"
  ),
  // 30. beach line
  hexToBinary(
    "f77df7bf7dd77feffb7ecdbbebfef7ffe7fbf73f72fddbddfeeff3faff5bfffffba76ef6bbddf7fbfff477f3dbeefe7dfffef42ff6fcffdbffbe7eefb7bbff7d"
  ),
  // 31. melt
  hexToBinary(
    "dffdff7bbbeffef5f7e7eb6dfbc7eeffdf6effff9f71fff9edeeeffdf3ff7fbfff2fdfbcef77f7ffffd7fef3f9f7ffffffbffff6dfbfffbfdffbfff7eb7fffe2"
  ),
  // 32. slow felt
  hexToBinary(
    "37fff7ff1fff7dff7dfdffbafbde7dfffbfb7ff5ddfff9f6d7fdd3fffff7b6cdf7fbf5d9d6ffbfbf1ffdffdfffff5f4bdfafffaaffaedfff9fdbebfffff6fdef"
  ),
  // 33. flames
  hexToBinary(
    "7ffdf6f5fffbef7fadff57bfbfbfffffef9b6e6dfd7fe97effdd7f6e5fbf7bf9bcbbf3fcfb5fffbfed95febd7e5eded7dfff7fbbdfe3f9bdbdc74fef76ffef7b"
  ),
  // 34. rivers
  hexToBinary(
    "6f7fe7ddf7fd7fafffef7f7faefedf5fdfeeffdbf3ffffbf97dfbfa7bfdffefecf7efbafb7efbfeefff5dfddf2b32ddaddffb7ffdf7f56f5ff67ac9ffffbf7ff"
  ),
  // 35. wave 2 directions
  hexToBinary(
    "dfb97fdf7febdffff77ac7f3ed7ebf7d5dfedff4bffdfffbf7ffeffebf5df7eff7f6fff5bfffbb7fbfb99feffdfdfff7fb75ddfedffebfb7ffd7e38fffefb2b7"
  ),
  // 36. temp triangle
  hexToBinary(
    "7ff3fffcddbef5b7bee594ffd6ff778a5fbdfbf3bff7bfeffbe9bcbfe7dbf22dcaffcef77ae78fdffff3fd7dffd9fdbfffffffbd777fe7ffbffdbeefff7f7cf7"
  ),
  // 37. draw triangle dots
  hexToBinary(
    "f4f57dddfeedbe7bdffeaffbff7f3fff7f5bfd73ff5fff5ff753efffcdff7bf7d9fff3ffbbffb7edfffecffdfff717ffffffbfde7dfe7ffdf8663dfbbfda9d7f"
  ),
  // 38. grow trees in hill
  hexToBinary(
    "fdef7cf77fb9fffedff77df7fdffb9fedf7fffe775fdc7df7fbcd5ff9d7dffff7ef8b7faebefdbfffd7fcfef5f67beeb7adff56efaeeb7d7bfbf9596f6dfebcf"
  ),
  // 39. tiny golden fishes
  hexToBinary(
    "ff93febaff7cfdf795d9fdecfbffffffff5fffbdf7fb7fffeed7bffeb77ffeef7ffc96d77fae5dfff7bff7ebf6dafffffeef768f75bf6cd9e61bb7e5fffdeff7"
  ),
  // 40. wave lines
  hexToBinary(
    "df3ffefdfbfddeedfffbff7efffe3fbf5feaf1f7bfbbbdfddf7effaef6b5fffb3df33ffe6ffd2dfb54ef97bbfff7fffdfdfbbefdfffde77efffab3fdfed9eb7f"
  ),
  // 41. pattern two
  hexToBinary(
    "76af5f63ffbfdf53eff1f9fb779f0ec7eed3fbcf7f1f2ede3fff6d5f5fbf7ebffb7ff8ed5dfbffbfeafd9ffdbf7fadb7ff7eff9dff7fb9efcfcffffffffffffd"
  ),
  // 42. pattern switch
  hexToBinary(
    "bbfffb67f7f6fdff7e3fff3f9f82f7df7bfefbf77ddfd4d3fffffb8efeffbff5bff7ff6bf1cf3eef79fbfeffceddaefdfff5ff7fc9ebf7ffbbfefff5effffeff"
  ),
].map((x) => x.split("").map(Number));

export let getRules = () => {
  let rulesData = new Uint32Array(2 ** 9);
  for (let i = 0; i < 2 ** 9; i++) {
    rulesData[i] = Math.random() < 0.8 ? 1 : 0;
    // rulesData[i] = rules[28][i];
  }

  return rulesData;
};

export let getInitialCells = (width: number, height: number) => {
  let cells = new Uint32Array(width * height);
  for (let i = 0; i < width * height; i++) {
    // cells[i] = Math.random() < 0.5 ? 1 : 0;
    // 400 pixles radius near the center, write 1
    let radius = 17;
    let x = i % width;
    let y = Math.floor(i / width);
    if ((x - width / 2) ** 2 + (y - height / 2) ** 2 < radius ** 2) {
      // random
      // cells[i] = Math.random() < 0.5 ? 1 : 0;
      cells[i] = 1;
    } else {
      cells[i] = 0;
    }
  }

  return cells;
};
